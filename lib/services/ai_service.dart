// lib/services/ai_service.dart
import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:flutter/foundation.dart';
import 'cache_service.dart';

class AIService {
  // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Firebase Remote Config –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  // –í—Ä–µ–º–µ–Ω–Ω–æ –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–ª—é—á –∑–¥–µ—Å—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  static const String _apiKey = String.fromEnvironment(
    'OPENAI_API_KEY',
    defaultValue: '', // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à –∫–ª—é—á –∑–¥–µ—Å—å –∏–ª–∏ —á–µ—Ä–µ–∑ --dart-define
  );

  static const String _apiUrl = 'https://api.openai.com/v1/chat/completions';

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–∞
  static bool get hasApiKey => _apiKey.isNotEmpty;

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∫–∞–∑–∫–∏
  static Future<String> generateStory({
    required String childName,
    required String theme,
    required String language,
  }) async {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    final cachedStory = await CacheService.getCachedStory(
      childName: childName,
      theme: theme,
      language: language,
    );
    
    if (cachedStory != null) {
      debugPrint('üì¶ Story loaded from cache');
      return cachedStory;
    }
    
    if (!hasApiKey) {
      debugPrint('‚ö†Ô∏è OpenAI API key not configured');
      return _getFallbackStory(childName, theme, language);
    }

    try {
      final response = await http.post(
        Uri.parse(_apiUrl),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $_apiKey',
        },
        body: jsonEncode({
          'model': 'gpt-3.5-turbo',
          'messages': [
            {
              'role': 'system',
              'content': 'You are a creative children\'s story writer. '
                  'Create short, engaging, and age-appropriate stories for 2-3 year old children. '
                  'Stories should be positive, educational, and fun. '
                  'Use simple language and include the child\'s name throughout the story. '
                  'Keep stories under 150 words. '
                  'Respond in $language language.',
            },
            {
              'role': 'user',
              'content': 'Create a bedtime story for a child named $childName about $theme.',
            }
          ],
          'temperature': 0.8,
          'max_tokens': 200,
        }),
      ).timeout(
        const Duration(seconds: 30),
        onTimeout: () {
          throw Exception('Connection timeout. Please check your internet connection.');
        },
      );

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        final story = data['choices'][0]['message']['content'];
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        await CacheService.cacheStory(
          childName: childName,
          theme: theme,
          story: story,
          language: language,
        );
        
        return story;
      } else if (response.statusCode == 401) {
        throw Exception('Invalid API key');
      } else if (response.statusCode == 429) {
        throw Exception('Rate limit exceeded. Please try again later.');
      } else if (response.statusCode >= 500) {
        throw Exception('Server error. Please try again later.');
      } else {
        throw Exception('Failed to generate story: ${response.statusCode}');
      }
    } on http.ClientException catch (e) {
      debugPrint('Network error: $e');
      throw Exception('Network error. Please check your internet connection.');
    } catch (e) {
      debugPrint('Error generating story: $e');
      if (e.toString().contains('Failed host lookup') || 
          e.toString().contains('SocketException')) {
        throw Exception('No internet connection. Please check your connection and try again.');
      }
      rethrow;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–≤–µ—Ç–æ–≤ –ø–æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—é
  static Future<String> getParentingAdvice({
    required String topic,
    required String childAge,
    required String language,
  }) async {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    final cachedAdvice = await CacheService.getCachedAdvice(
      topic: topic,
      childAge: childAge,
      language: language,
    );
    
    if (cachedAdvice != null) {
      debugPrint('üì¶ Advice loaded from cache');
      return cachedAdvice;
    }
    
    if (!hasApiKey) {
      return _getFallbackAdvice(topic, childAge, language);
    }

    try {
      final response = await http.post(
        Uri.parse(_apiUrl),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $_apiKey',
        },
        body: jsonEncode({
          'model': 'gpt-3.5-turbo',
          'messages': [
            {
              'role': 'system',
              'content': 'You are a professional child development expert and parenting counselor. '
                  'Provide practical, evidence-based advice that is supportive and non-judgmental. '
                  'Keep responses concise (2-3 paragraphs) and actionable. '
                  'Consider child\'s age when giving advice. '
                  'Respond in $language language.',
            },
            {
              'role': 'user',
              'content': 'I have a $childAge old child. I need advice about: $topic',
            }
          ],
          'temperature': 0.7,
          'max_tokens': 250,
        }),
      ).timeout(
        const Duration(seconds: 30),
        onTimeout: () {
          throw Exception('Connection timeout. Please check your internet connection.');
        },
      );

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        final advice = data['choices'][0]['message']['content'];
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        await CacheService.cacheAdvice(
          topic: topic,
          childAge: childAge,
          advice: advice,
          language: language,
        );
        
        return advice;
      } else if (response.statusCode == 401) {
        throw Exception('Invalid API key');
      } else if (response.statusCode == 429) {
        throw Exception('Rate limit exceeded. Please try again later.');
      } else if (response.statusCode >= 500) {
        throw Exception('Server error. Please try again later.');
      } else {
        throw Exception('Failed to get advice: ${response.statusCode}');
      }
    } on http.ClientException catch (e) {
      debugPrint('Network error: $e');
      throw Exception('Network error. Please check your internet connection.');
    } catch (e) {
      debugPrint('Error getting parenting advice: $e');
      if (e.toString().contains('Failed host lookup') || 
          e.toString().contains('SocketException')) {
        throw Exception('No internet connection. Please check your connection and try again.');
      }
      rethrow;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏—Ö —Å–æ–≤–µ—Ç–æ–≤
  static Future<Map<String, dynamic>> getDevelopmentAnalysis({
    required String childName,
    required int ageInMonths,
    required String language,
  }) async {
    if (!hasApiKey) {
      return _getFallbackAnalysis(language);
    }

    try {
      final response = await http.post(
        Uri.parse(_apiUrl),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $_apiKey',
        },
        body: jsonEncode({
          'model': 'gpt-3.5-turbo',
          'messages': [
            {
              'role': 'system',
              'content': 'You are a child development expert. '
                  'Provide brief, practical analysis and suggestions for parents. '
                  'Focus on age-appropriate activities and milestones. '
                  'Be encouraging and supportive. '
                  'Respond in $language language as JSON with structure: '
                  '{"summary": "string", "strengths": ["string"], "suggestions": ["string"]}',
            },
            {
              'role': 'user',
              'content': 'Provide development analysis for $childName who is $ageInMonths months old.',
            }
          ],
          'temperature': 0.7,
          'max_tokens': 300,
        }),
      ).timeout(
        const Duration(seconds: 30),
        onTimeout: () {
          throw Exception('Connection timeout. Please check your internet connection.');
        },
      );

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        final content = data['choices'][0]['message']['content'];
        return jsonDecode(content);
      } else if (response.statusCode == 401) {
        throw Exception('Invalid API key');
      } else if (response.statusCode == 429) {
        throw Exception('Rate limit exceeded. Please try again later.');
      } else if (response.statusCode >= 500) {
        throw Exception('Server error. Please try again later.');
      } else {
        throw Exception('Failed to get analysis: ${response.statusCode}');
      }
    } on http.ClientException catch (e) {
      debugPrint('Network error: $e');
      return _getFallbackAnalysis(language);
    } catch (e) {
      debugPrint('Error getting development analysis: $e');
      if (e.toString().contains('Failed host lookup') || 
          e.toString().contains('SocketException')) {
        return _getFallbackAnalysis(language);
      }
      return _getFallbackAnalysis(language);
    }
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è —Ç–µ–º—ã –¥–Ω—è
  static Future<String> generateTopicActivity({
    required String topic,
    required String ageGroup,
    required String language,
  }) async {
    if (!hasApiKey) {
      return _getFallbackTopicActivity(topic, ageGroup, language);
    }

    try {
      final response = await http.post(
        Uri.parse(_apiUrl),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $_apiKey',
        },
        body: jsonEncode({
          'model': 'gpt-3.5-turbo',
          'messages': [
            {
              'role': 'system',
              'content': 'You are a child development expert specializing in age-appropriate activities. '
                  'Create practical, engaging, and safe activities for children. '
                  'Activities should be easy to do at home with common materials. '
                  'Keep suggestions concise (2-3 sentences) and action-oriented. '
                  'Respond in $language language.',
            },
            {
              'role': 'user',
              'content': 'Create an activity for children aged $ageGroup related to "$topic". '
                  'The activity should help develop this skill or explore this topic.',
            }
          ],
          'temperature': 0.8,
          'max_tokens': 150,
        }),
      ).timeout(
        const Duration(seconds: 30),
        onTimeout: () {
          throw Exception('Connection timeout. Please check your internet connection.');
        },
      );

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        return data['choices'][0]['message']['content'].trim();
      } else if (response.statusCode == 401) {
        throw Exception('Invalid API key');
      } else if (response.statusCode == 429) {
        throw Exception('Rate limit exceeded. Please try again later.');
      } else if (response.statusCode >= 500) {
        throw Exception('Server error. Please try again later.');
      } else {
        throw Exception('Failed to generate activity: ${response.statusCode}');
      }
    } on http.ClientException catch (e) {
      debugPrint('Network error: $e');
      return _getFallbackTopicActivity(topic, ageGroup, language);
    } catch (e) {
      debugPrint('Error generating topic activity: $e');
      if (e.toString().contains('Failed host lookup') || 
          e.toString().contains('SocketException')) {
        return _getFallbackTopicActivity(topic, ageGroup, language);
      }
      return _getFallbackTopicActivity(topic, ageGroup, language);
    }
  }

  // ===== –ó–ê–ü–ê–°–ù–´–ï –í–ê–†–ò–ê–ù–¢–´ (FALLBACK) =====

  // –ó–∞–ø–∞—Å–Ω–∞—è —Å–∫–∞–∑–∫–∞
  static String _getFallbackStory(String childName, String theme, String language) {
    final stories = {
      'en': 'Once upon a time, $childName went on a magical adventure about $theme. '
          'They discovered wonderful things and made new friends. '
          'After a day full of joy and learning, $childName returned home '
          'happy and ready for sweet dreams. The end.',
      'ru': '–ñ–∏–ª-–±—ã–ª –º–∞–ª—ã—à –ø–æ –∏–º–µ–Ω–∏ $childName. –û–¥–Ω–∞–∂–¥—ã $childName –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è '
          '–≤ –≤–æ–ª—à–µ–±–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, –≥–¥–µ —É–∑–Ω–∞–ª –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –ø—Ä–æ $theme. '
          '–ü–æ –ø—É—Ç–∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π –∏ —É–≤–∏–¥–µ–ª —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–∏. '
          '–í–µ—á–µ—Ä–æ–º $childName –≤–µ—Ä–Ω—É–ª—Å—è –¥–æ–º–æ–π —Å—á–∞—Å—Ç–ª–∏–≤—ã–π –∏ –¥–æ–≤–æ–ª—å–Ω—ã–π. '
          '–ò —Å–Ω–∏–ª–∏—Å—å –µ–º—É —Ç–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–∏–µ —Å–Ω—ã.',
      'es': 'Hab√≠a una vez un ni√±o llamado $childName que fue a una aventura m√°gica sobre $theme. '
          'Descubri√≥ cosas maravillosas e hizo nuevos amigos. '
          'Despu√©s de un d√≠a lleno de alegr√≠a, $childName volvi√≥ a casa '
          'feliz y listo para dulces sue√±os.',
      'fr': 'Il √©tait une fois $childName qui partit dans une aventure magique sur $theme. '
          'Il d√©couvrit des choses merveilleuses et se fit de nouveaux amis. '
          'Apr√®s une journ√©e pleine de joie, $childName rentra √† la maison '
          'heureux et pr√™t pour de doux r√™ves.',
      'de': 'Es war einmal $childName, der auf ein magisches Abenteuer √ºber $theme ging. '
          'Er entdeckte wunderbare Dinge und fand neue Freunde. '
          'Nach einem Tag voller Freude kehrte $childName gl√ºcklich nach Hause zur√ºck '
          'und war bereit f√ºr s√º√üe Tr√§ume.',
    };

    return stories[language] ?? stories['en']!;
  }

  // –ó–∞–ø–∞—Å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
  static String _getFallbackAdvice(String topic, String childAge, String language) {
    final advice = {
      'en': 'Every child develops at their own pace. For a $childAge old child, '
          'it\'s important to be patient and supportive. Regarding "$topic", '
          'try to create a positive environment, establish routines, '
          'and celebrate small achievements. If you have concerns, '
          'consult with your pediatrician.',
      'ru': '–ö–∞–∂–¥—ã–π —Ä–µ–±–µ–Ω–æ–∫ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –≤ —Å–≤–æ–µ–º —Ç–µ–º–ø–µ. –î–ª—è —Ä–µ–±–µ–Ω–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ $childAge '
          '–≤–∞–∂–Ω–æ –ø—Ä–æ—è–≤–ª—è—Ç—å —Ç–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –ö–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–º—ã "$topic", '
          '—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Ä–µ–∂–∏–º –¥–Ω—è '
          '–∏ –æ—Ç–º–µ—á–∞—Ç—å –¥–∞–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è. –ü—Ä–∏ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–µ '
          '–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–µ–¥–∏–∞—Ç—Ä—É.',
    };

    return advice[language] ?? advice['en']!;
  }

  // –ó–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
  static Map<String, dynamic> _getFallbackAnalysis(String language) {
    final analysis = {
      'en': {
        'summary': 'Your child is developing well and reaching age-appropriate milestones.',
        'strengths': [
          'Good physical development',
          'Active exploration of the world',
          'Language skills developing'
        ],
        'suggestions': [
          'Continue reading books together',
          'Encourage independence',
          'Play educational games'
        ],
      },
      'ru': {
        'summary': '–í–∞—à —Ä–µ–±–µ–Ω–æ–∫ —Ö–æ—Ä–æ—à–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –∏ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–æ–∑—Ä–∞—Å—Ç—É –≤–µ—Ö.',
        'strengths': [
          '–•–æ—Ä–æ—à–µ–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ',
          '–ê–∫—Ç–∏–≤–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–∏—Ä–∞',
          '–†–∞–∑–≤–∏—Ç–∏–µ —Ä–µ—á–µ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤'
        ],
        'suggestions': [
          '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏ –≤–º–µ—Å—Ç–µ',
          '–ü–æ–æ—â—Ä—è–π—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
          '–ò–≥—Ä–∞–π—Ç–µ –≤ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ –∏–≥—Ä—ã'
        ],
      },
      'es': {
        'summary': 'Su hijo se est√° desarrollando bien y alcanzando hitos apropiados para su edad.',
        'strengths': [
          'Buen desarrollo f√≠sico',
          'Exploraci√≥n activa del mundo',
          'Desarrollo de habilidades ling√º√≠sticas'
        ],
        'suggestions': [
          'Contin√∫e leyendo libros juntos',
          'Fomente la independencia',
          'Juegue juegos educativos'
        ],
      },
      'fr': {
        'summary': 'Votre enfant se d√©veloppe bien et atteint les √©tapes appropri√©es √† son √¢ge.',
        'strengths': [
          'Bon d√©veloppement physique',
          'Exploration active du monde',
          'D√©veloppement des comp√©tences linguistiques'
        ],
        'suggestions': [
          'Continuez √† lire des livres ensemble',
          'Encouragez l\'ind√©pendance',
          'Jouez √† des jeux √©ducatifs'
        ],
      },
      'de': {
        'summary': 'Ihr Kind entwickelt sich gut und erreicht altersgerechte Meilensteine.',
        'strengths': [
          'Gute k√∂rperliche Entwicklung',
          'Aktive Welterkundung',
          'Sprachentwicklung'
        ],
        'suggestions': [
          'Lesen Sie weiterhin gemeinsam B√ºcher',
          'F√∂rdern Sie die Unabh√§ngigkeit',
          'Spielen Sie Lernspiele'
        ],
      },
    };

    return analysis[language] ?? analysis['en']!;
  }

  // –ó–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ–º—ã –¥–Ω—è
  static String _getFallbackTopicActivity(String topic, String ageGroup, String language) {
    final activities = {
      'ru': {
        'default': '–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ –∏–≥—Ä—É, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å —Ç–µ–º–æ–π "$topic". –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–≥—Ä—É—à–∫–∏, –∫–Ω–∏–≥–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —á—Ç–æ–±—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —ç—Ç—É —Ç–µ–º—É –≤–º–µ—Å—Ç–µ —Å —Ä–µ–±–µ–Ω–∫–æ–º. –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç $ageGroup.',
        'emotional': '–ü–æ–≥–æ–≤–æ—Ä–∏—Ç–µ —Å —Ä–µ–±–µ–Ω–∫–æ–º –æ —á—É–≤—Å—Ç–≤–∞—Ö, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏. –ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –≤—ã—Ä–∞–∂–∞—Ç—å —ç–º–æ—Ü–∏–∏ —Å–ª–æ–≤–∞–º–∏ –∏ –ø–æ–º–æ–≥–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É –ø–æ–Ω—è—Ç—å —Å–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞.',
        'social': '–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —Ä–æ–ª–µ–≤—É—é –∏–≥—Ä—É, –≥–¥–µ —Ä–µ–±–µ–Ω–æ–∫ –º–æ–∂–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫—É–∫–ª—ã –∏–ª–∏ –º—è–≥–∫–∏–µ –∏–≥—Ä—É—à–∫–∏ –¥–ª—è —Ä–∞–∑—ã–≥—Ä—ã–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.',
        'cognitive': '–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—É—é –∏–≥—Ä—É-–≥–æ–ª–æ–≤–æ–ª–æ–º–∫—É –∏–ª–∏ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Ä–∞–∑–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤, —Ñ–æ—Ä–º –∏–ª–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è.',
        'physical': '–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ –∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É —Å –¥–≤–∏–∂–µ–Ω–∏—è–º–∏ - –ø—Ä—ã–∂–∫–∏, —Ç–∞–Ω—Ü—ã –∏–ª–∏ –ø–æ–ª–æ—Å—É –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π –∏–∑ –ø–æ–¥—É—à–µ–∫. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –∏ –º–æ—Ç–æ—Ä–∏–∫—É.',
        'creative': '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ - —Ä–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏, –ª–µ–ø–∫—É –∏–∑ –ø–ª–∞—Å—Ç–∏–ª–∏–Ω–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–µ–ª–∫–∏ –∏–∑ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.',
      },
      'en': {
        'default': 'Organize a play activity related to "$topic". Use toys, books, or simple materials to explore this theme together. Adapt the complexity for age $ageGroup.',
        'emotional': 'Talk with your child about feelings using everyday examples. Show how to express emotions with words and help them understand their feelings.',
        'social': 'Set up role-play games where your child can practice social skills. Use dolls or stuffed animals to act out different situations.',
        'cognitive': 'Create a simple puzzle game or sorting activity. Use objects of different colors, shapes, or sizes to develop logical thinking.',
        'physical': 'Organize active play with movements - jumping, dancing, or an obstacle course with pillows. This helps develop coordination and motor skills.',
        'creative': 'Offer creative activities - finger painting, clay modeling, or making crafts from natural materials.',
      },
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤ —Ç–µ–º–µ
    String category = 'default';
    final topicLower = topic.toLowerCase();

    if (topicLower.contains('—ç–º–æ—Ü') || topicLower.contains('—á—É–≤—Å—Ç–≤') || topicLower.contains('emotion') || topicLower.contains('feeling')) {
      category = 'emotional';
    } else if (topicLower.contains('–¥—Ä—É–∑') || topicLower.contains('–æ–±—â–µ–Ω') || topicLower.contains('social') || topicLower.contains('friend')) {
      category = 'social';
    } else if (topicLower.contains('–ª–æ–≥–∏–∫') || topicLower.contains('–º—ã—à–ª–µ–Ω') || topicLower.contains('logic') || topicLower.contains('think')) {
      category = 'cognitive';
    } else if (topicLower.contains('–¥–≤–∏–∂–µ–Ω') || topicLower.contains('—Ñ–∏–∑–∏—á') || topicLower.contains('physical') || topicLower.contains('move')) {
      category = 'physical';
    } else if (topicLower.contains('—Ç–≤–æ—Ä—á') || topicLower.contains('—Ä–∏—Å–æ–≤') || topicLower.contains('creative') || topicLower.contains('art')) {
      category = 'creative';
    }

    final langActivities = activities[language] ?? activities['en']!;
    return langActivities[category] ?? langActivities['default']!;
  }
}