// lib/services/notification_service.dart
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import '../services/firebase_service.dart';

class NotificationService {
  static final FirebaseMessaging _firebaseMessaging = FirebaseMessaging.instance;
  static bool _initialized = false;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  static Future<void> initialize() async {
    if (_initialized) return;

    try {
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      NotificationSettings settings = await _firebaseMessaging.requestPermission(
        alert: true,
        announcement: false,
        badge: true,
        carPlay: false,
        criticalAlert: false,
        provisional: false,
        sound: true,
      );

      debugPrint('üì± Notification permission status: ${settings.authorizationStatus}');

      if (settings.authorizationStatus == AuthorizationStatus.authorized) {
        // –ü–æ–ª—É—á–∞–µ–º FCM —Ç–æ–∫–µ–Ω
        String? token = await _firebaseMessaging.getToken();
        if (token != null) {
          debugPrint('üì± FCM Token: $token');
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ Firebase –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          await _saveTokenToFirebase(token);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        _firebaseMessaging.onTokenRefresh.listen((token) async {
          debugPrint('üì± FCM Token refreshed: $token');
          await _saveTokenToFirebase(token);
        });

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        _setupMessageHandlers();
        
        _initialized = true;
        debugPrint('‚úÖ NotificationService initialized successfully');
      }
    } catch (e) {
      debugPrint('‚ùå NotificationService initialization error: $e');
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞ –≤ Firebase
  static Future<void> _saveTokenToFirebase(String token) async {
    try {
      if (FirebaseService.currentUserId != null) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ Firebase (–Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥)
        // await FirebaseService.updateUserProfile({
        //   'fcmToken': token,
        //   'lastTokenUpdate': FieldValue.serverTimestamp(),
        // });
        debugPrint('‚úÖ FCM token saved to Firebase');
      }
    } catch (e) {
      debugPrint('‚ùå Error saving FCM token: $e');
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
  static void _setupMessageHandlers() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–µ
    FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ
    FirebaseMessaging.onMessage.listen((RemoteMessage message) {
      debugPrint('üì± Received foreground message: ${message.messageId}');
      _showForegroundNotification(message);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) {
      debugPrint('üì± Notification opened app: ${message.messageId}');
      _handleNotificationTap(message);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    FirebaseMessaging.instance.getInitialMessage().then((RemoteMessage? message) {
      if (message != null) {
        debugPrint('üì± App opened from notification: ${message.messageId}');
        _handleNotificationTap(message);
      }
    });
  }

  // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ
  static void _showForegroundNotification(RemoteMessage message) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    // –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–ªutterLocalNotificationsPlugin –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    debugPrint('üì± Showing foreground notification: ${message.notification?.title}');
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  static void _handleNotificationTap(RemoteMessage message) {
    final data = message.data;
    final screen = data['screen'];

    debugPrint('üì± Handling notification tap - screen: $screen');

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    switch (screen) {
      case 'diary':
        // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–Ω–µ–≤–Ω–∏–∫
        break;
      case 'activities':
        // –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ç—Ä–µ–∫–µ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
        break;
      case 'profile':
        // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å —Ä–µ–±–µ–Ω–∫–∞
        break;
      default:
        // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        break;
    }
  }

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–æ–ø–∏–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  static Future<void> subscribeToTopics() async {
    try {
      if (FirebaseService.currentUserId != null) {
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        await _firebaseMessaging.subscribeToTopic('general');
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –¥–µ—Ç–µ–π
        // final children = await FirebaseService.getChildren();
        // for (final child in children) {
        //   final ageGroup = _getAgeGroup(child.ageInMonths);
        //   await _firebaseMessaging.subscribeToTopic('age_$ageGroup');
        // }
        
        debugPrint('‚úÖ Subscribed to notification topics');
      }
    } catch (e) {
      debugPrint('‚ùå Error subscribing to topics: $e');
    }
  }

  // –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Ç–æ–ø–∏–∫–æ–≤
  static Future<void> unsubscribeFromTopics() async {
    try {
      await _firebaseMessaging.unsubscribeFromTopic('general');
      
      // –û—Ç–ø–∏—Å–∫–∞ –æ—Ç –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø
      for (int ageGroup = 0; ageGroup <= 5; ageGroup++) {
        await _firebaseMessaging.unsubscribeFromTopic('age_$ageGroup');
      }
      
      debugPrint('‚úÖ Unsubscribed from notification topics');
    } catch (e) {
      debugPrint('‚ùå Error unsubscribing from topics: $e');
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  static Future<void> scheduleLocalNotification({
    required String title,
    required String body,
    required DateTime scheduledTime,
    Map<String, String>? data,
  }) async {
    try {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å flutter_local_notifications
      // –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      debugPrint('üì± Scheduling local notification: $title at $scheduledTime');
    } catch (e) {
      debugPrint('‚ùå Error scheduling local notification: $e');
    }
  }

  // –û—Ç–º–µ–Ω–∞ –≤—Å–µ—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  static Future<void> cancelAllLocalNotifications() async {
    try {
      // –û—Ç–º–µ–Ω–∞ –≤—Å–µ—Ö –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      debugPrint('üì± Cancelled all local notifications');
    } catch (e) {
      debugPrint('‚ùå Error cancelling local notifications: $e');
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  static Future<AuthorizationStatus> getPermissionStatus() async {
    final settings = await _firebaseMessaging.getNotificationSettings();
    return settings.authorizationStatus;
  }

  // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∑–∞–Ω–æ–≤–æ
  static Future<bool> requestPermissions() async {
    try {
      final settings = await _firebaseMessaging.requestPermission(
        alert: true,
        badge: true,
        sound: true,
      );
      
      return settings.authorizationStatus == AuthorizationStatus.authorized;
    } catch (e) {
      debugPrint('‚ùå Error requesting notification permissions: $e');
      return false;
    }
  }

  // –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static Future<void> scheduleSmartNotifications() async {
    try {
      // final children = await FirebaseService.getChildren();
      
      // for (final child in children) {
      //   // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫
      //   await _scheduleDiaryReminder(child);
      //   
      //   // –°–æ–≤–µ—Ç—ã –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é
      //   await _scheduleDevelopmentTips(child);
      //   
      //   // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∏–∑–º–µ—Ä–µ–Ω–∏—è—Ö
      //   await _scheduleMeasurementReminders(child);
      // }
      
      debugPrint('‚úÖ Smart notifications scheduled');
    } catch (e) {
      debugPrint('‚ùå Error scheduling smart notifications: $e');
    }
  }

  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫

  // –°–æ–≤–µ—Ç—ã –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é

  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∏–∑–º–µ—Ä–µ–Ω–∏—è—Ö

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–≤–µ—Ç–æ–≤ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ–Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@pragma('vm:entry-point')
Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {
  debugPrint('üì± Handling background message: ${message.messageId}');
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ–Ω–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
}